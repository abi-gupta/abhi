<Activity mc:Ignorable="sap sap2010 sads" x:Class="Add"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="AssetName in a best practise asset syntax [Prefix]_[AssetName]_[Suffix]" Name="in_AssetName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Asset type. Allowed types, String, Integer, Boolean, Credentials" Name="in_AssetType" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Asset initial value" Name="in_AssetValue" Type="InArgument(x:Object)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Add_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow Add asset which is recognized as a global variable" DisplayName="Main" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="assetName" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="config" />
      <Variable x:TypeArguments="x:String" Default="Components\Global variables" Name="componentPath" />
      <Variable x:TypeArguments="x:String" Default="Framework\Components\Global variables\Templates" Name="templatesPath" />
      <Variable x:TypeArguments="s:Object[]" Name="assetValue" />
    </Sequence.Variables>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Get.Configuration workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Solution\Get.Configuration.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_SolutionConfiguration">[config]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:String" Name="answer" />
        <Variable x:TypeArguments="x:String" Name="selectedType" />
        <Variable x:TypeArguments="s:String[]" Name="allowedTypes" />
        <Variable x:TypeArguments="x:Int32" Name="result" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="silentMode" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_9">
          <Assign DisplayName="Assign allowedTypes" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[allowedTypes]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[{"String","Integer","Boolean"}]</InArgument>
            </Assign.Value>
          </Assign>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID17" Condition="[Not (String.IsNullOrWhiteSpace(in_AssetName))]" DisplayName="Arguments" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                  <Sequence DisplayName="Silent mode" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <Sequence DisplayName="Validate arguments" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <If Condition="[Not String.IsNullOrWhiteSpace(in_AssetType)]" DisplayName="If - in_AssetType is not empty" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Then>
                          <Throw DisplayName="ArgumentException" Exception="[New ArgumentException(&quot;in_AssetType can't be empty. Allowed values are &quot; + String.Join(&quot;, &quot;,allowedTypes))]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                        </If.Then>
                      </If>
                      <If Condition="[Not allowedTypes.Contains(in_AssetType)]" DisplayName="If - in_AssetType is allowed type" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Throw DisplayName="ArgumentException" Exception="[New ArgumentException(&quot;in_AssetType doesn't match allowed types. Allowed type values are &quot; + String.Join(&quot;, &quot;,allowedTypes))]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                        </If.Then>
                      </If>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[silentMode]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                      <Sequence DisplayName="Create asset" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <If Condition="[CBool(config(&quot;UsingOrchestrator&quot;))]" DisplayName="If - Check Framework.UsingOrchestrator" sap2010:WorkflowViewState.IdRef="If_5">
                          <If.Then>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CreateAsset workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Components\Orchestrator\Orchestrator.Asset.Create.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <OutArgument x:TypeArguments="x:Int32" x:Key="out_Result">[result]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AssetName">[in_AssetName]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AssetType">[in_AssetType]</InArgument>
                                <InArgument x:TypeArguments="s:Object[]" x:Key="in_AssetValue">[assetValue]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                          <If.Else>
                            <TryCatch DisplayName="Try Catch - CREATE - file asset" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                              <TryCatch.Try>
                                <If Condition="[in_AssetType.ToLower = &quot;credential&quot;]" sap2010:WorkflowViewState.IdRef="If_10">
                                  <If.Then>
                                    <Sequence DisplayName="Create credential" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:Boolean" Name="credentialExists" />
                                      </Sequence.Variables>
                                      <ui:GetSecureCredential Password="{x:Null}" Username="{x:Null}" CredentialType="Generic" DisplayName="Get secure credential" sap2010:WorkflowViewState.IdRef="GetSecureCredential_1" PersistanceType="Enterprise" Result="[credentialExists]" Target="[in_AssetName]" />
                                      <If Condition="[credentialExists]" DisplayName="Same asset already exists" sap2010:WorkflowViewState.IdRef="If_11">
                                        <If.Then>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[result]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">300</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                                            <ui:AddCredential CredentialType="Generic" DisplayName="Add credential" sap2010:WorkflowViewState.IdRef="AddCredential_1" Password="[assetValue.LastOrDefault().ToString]" PersistanceType="Enterprise" Target="[in_AssetName]" Username="[assetValue.FirstOrDefault().ToString]" />
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[result]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">200</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Create asset" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="sd:DataTable" Name="globalVarsTable" />
                                      </Sequence.Variables>
                                      <ui:WriteTextFile DisplayName="Write Text File - create asset in Temp" FileName="[Path.Combine(Environment.GetEnvironmentVariable(&quot;Temp&quot;),in_AssetName + &quot;.&quot; + in_AssetType)]" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[in_AssetValue.ToString]" />
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[result]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">200</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[exception.ToString]" />
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[result]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">400</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </If.Else>
                        </If>
                      </Sequence>
                      <FlowStep.Next>
                        <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID20" DisplayName="Result" Expression="[result]" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
                          <FlowSwitch.Default>
                            <FlowStep x:Name="__ReferenceID23" sap2010:WorkflowViewState.IdRef="FlowStep_14">
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="Error adding asset to Orchestrator" />
                            </FlowStep>
                          </FlowSwitch.Default>
                          <FlowStep x:Key="200" x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                            <Sequence DisplayName="Build XAMLs" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="getTemplateFile" />
                                <Variable x:TypeArguments="x:String" Name="setTemplateFile" />
                              </Sequence.Variables>
                              <If Condition="[CBool(config(&quot;UsingOrchestrator&quot;))]" DisplayName="If - GET TEMPLATES - Check UsingOrchestrator" sap2010:WorkflowViewState.IdRef="If_7">
                                <If.Then>
                                  <Sequence DisplayName="Get templates - Orchestrator" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <Assign DisplayName="Assign getTemplateFile" sap2010:WorkflowViewState.IdRef="Assign_1">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[getTemplateFile]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Directory.GetFiles(Path.Combine(templatesPath,"Orchestrator")).FirstOrDefault(Function(x) x.ToLower.Contains(String.Format("get.{0}.xaml",selectedType.ToLower)))]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign setTemplateFile" sap2010:WorkflowViewState.IdRef="Assign_2">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[setTemplateFile]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Directory.GetFiles(Path.Combine(templatesPath,"Orchestrator")).FirstOrDefault(Function(x) x.ToLower.Contains(String.Format("set.{0}.xaml",selectedType.ToLower)))]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Get templates - File" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <Assign DisplayName="Assign getTemplateFile" sap2010:WorkflowViewState.IdRef="Assign_18">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[getTemplateFile]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Directory.GetFiles(Path.Combine(templatesPath,"File")).FirstOrDefault(Function(x) x.ToLower.Contains(String.Format("get.{0}.xaml",selectedType.ToLower)))]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign setTemplateFile" sap2010:WorkflowViewState.IdRef="Assign_19">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[setTemplateFile]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Directory.GetFiles(Path.Combine(templatesPath,"File")).FirstOrDefault(Function(x) x.ToLower.Contains(String.Format("set.{0}.xaml",selectedType.ToLower)))]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <If Condition="[Not (String.IsNullOrWhiteSpace(getTemplateFile) OrElse String.IsNullOrWhiteSpace(setTemplateFile))]" sap2010:WorkflowViewState.IdRef="If_1">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[Path.Combine(componentPath,assetName)]" />
                                    <If Condition="[CBool(config(&quot;UsingOrchestrator&quot;))]" DisplayName="If - BUILD - Check Framework.UsingOrchestrator" sap2010:WorkflowViewState.IdRef="If_6">
                                      <If.Then>
                                        <Sequence DisplayName="Build - Orchestrator" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="fileContent" />
                                          </Sequence.Variables>
                                          <Sequence DisplayName="Create Get xaml" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                            <Assign DisplayName="Assign - GET - read template" sap2010:WorkflowViewState.IdRef="Assign_3">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[FIle.ReadAllText(getTemplateFile)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - GET - replace #AssetName#" sap2010:WorkflowViewState.IdRef="Assign_4">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetName#",in_AssetName)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - GET - replace #AssetType#" sap2010:WorkflowViewState.IdRef="Assign_29">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetValue#",in_AssetValue.ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="WriteAllText" TargetType="si:File">
                                              <InArgument x:TypeArguments="x:String">[Path.Combine(componentPath,assetName,assetName+".Get.xaml")]</InArgument>
                                              <InArgument x:TypeArguments="x:String">[fileContent]</InArgument>
                                            </InvokeMethod>
                                          </Sequence>
                                          <Sequence DisplayName="Create Set xaml" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                            <Assign DisplayName="Assign - SET - read template" sap2010:WorkflowViewState.IdRef="Assign_5">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[FIle.ReadAllText(setTemplateFile)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - SET - replace #AssetName#" sap2010:WorkflowViewState.IdRef="Assign_6">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetName#",in_AssetName)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - SET - replace #AssetType#" sap2010:WorkflowViewState.IdRef="Assign_7">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetType#",selectedType)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="WriteAllText" TargetType="si:File">
                                              <InArgument x:TypeArguments="x:String">[Path.Combine(componentPath,assetName,assetName+".Set.xaml")]</InArgument>
                                              <InArgument x:TypeArguments="x:String">[fileContent]</InArgument>
                                            </InvokeMethod>
                                          </Sequence>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Build - File" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="fileContent" />
                                          </Sequence.Variables>
                                          <Sequence DisplayName="Create Get xaml" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                            <Assign DisplayName="Assign - GET - read template" sap2010:WorkflowViewState.IdRef="Assign_13">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[FIle.ReadAllText(getTemplateFile)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - GET - replace #AssetName#" sap2010:WorkflowViewState.IdRef="Assign_14">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetName#",in_AssetName)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - GET - replace #AssetType#" sap2010:WorkflowViewState.IdRef="Assign_20">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetType#",selectedType)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="WriteAllText" TargetType="si:File">
                                              <InArgument x:TypeArguments="x:String">[Path.Combine(componentPath,assetName,assetName+".Get.xaml")]</InArgument>
                                              <InArgument x:TypeArguments="x:String">[fileContent]</InArgument>
                                            </InvokeMethod>
                                          </Sequence>
                                          <Sequence DisplayName="Create Set xaml" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                            <Assign DisplayName="Assign - SET - read template" sap2010:WorkflowViewState.IdRef="Assign_15">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[FIle.ReadAllText(setTemplateFile)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - SET - replace #AssetName#" sap2010:WorkflowViewState.IdRef="Assign_16">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetName#",in_AssetName)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Assign - SET - replace #AssetType#" sap2010:WorkflowViewState.IdRef="Assign_17">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[fileContent]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[fileContent.Replace("#AssetType#",selectedType)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="WriteAllText" TargetType="si:File">
                                              <InArgument x:TypeArguments="x:String">[Path.Combine(componentPath,assetName,assetName+".Set.xaml")]</InArgument>
                                              <InArgument x:TypeArguments="x:String">[fileContent]</InArgument>
                                            </InvokeMethod>
                                          </Sequence>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </FlowStep>
                          <FlowStep x:Key="300" x:Name="__ReferenceID21" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                            <Sequence DisplayName="Ask Try again if not in silent mode" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <If Condition="[Not silentMode]" sap2010:WorkflowViewState.IdRef="If_4">
                                <If.Then>
                                  <ui:MessageBox Caption="{x:Null}" Buttons="YesNo" ChosenButton="[answer]" DisplayName="Asset exist" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="Global asset name already exists. Create different ?" TopMost="True" />
                                </If.Then>
                                <If.Else>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[answer]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">No</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Else>
                              </If>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID15" Condition="[answer.ToLower = &quot;no&quot;]" DisplayName="Answer" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                <FlowDecision.False>
                                  <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                                    <Sequence DisplayName="Ask questions" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                      <DoWhile DisplayName="Do While - name has to be provided" sap2010:WorkflowViewState.IdRef="DoWhile_2" Condition="[assetName Is Nothing OrElse String.IsNullOrWhiteSpace(assetName)]">
                                        <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog - ask name" sap2010:WorkflowViewState.IdRef="InputDialog_7" IsPassword="False" Label="[String.Join(ControlChars.NewLine,{&quot;1. Use PascalCamelCase syntax&quot;,&quot;2. Prefix will be resolved from solution configuration, make sure it configured!&quot;,&quot;&quot;,&quot;Enter Global variable name&quot;})]" Title="Add Global variable - Name">
                                          <ui:InputDialog.Result>
                                            <OutArgument x:TypeArguments="x:String">[assetName]</OutArgument>
                                          </ui:InputDialog.Result>
                                        </ui:InputDialog>
                                      </DoWhile>
                                      <DoWhile DisplayName="Do While - type needs to be selected" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[selectedType Is Nothing OrElse String.IsNullOrWhiteSpace(selectedType)]">
                                        <ui:InputDialog DisplayName="Input Dialog - ask type" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="False" Label="Please select asset type" Options="[allowedTypes]" Title="Add Global variable - Type">
                                          <ui:InputDialog.Result>
                                            <OutArgument x:TypeArguments="x:String">[selectedType]</OutArgument>
                                          </ui:InputDialog.Result>
                                        </ui:InputDialog>
                                      </DoWhile>
                                      <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_2">
                                        <Flowchart.Variables>
                                          <Variable x:TypeArguments="x:String" Name="passwordVal" />
                                        </Flowchart.Variables>
                                        <Flowchart.StartNode>
                                          <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID6" DisplayName="Flow Switch" Expression="[selectedType.ToLower]" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_2">
                                            <FlowSwitch.Default>
                                              <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                                                <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog - ask initial value" sap2010:WorkflowViewState.IdRef="InputDialog_10" IsPassword="False" Label="[&quot;Enter initial value (can't be empty) aligned with selected type: &quot; + selectedType]" Title="Add Global variable - Initial value">
                                                  <ui:InputDialog.Result>
                                                    <OutArgument x:TypeArguments="x:Object">[in_AssetValue]</OutArgument>
                                                  </ui:InputDialog.Result>
                                                </ui:InputDialog>
                                                <FlowStep.Next>
                                                  <FlowDecision x:Name="__ReferenceID7" Condition="[in_AssetValue Is Nothing OrElse String.IsNullOrWhiteSpace(in_AssetValue.ToString)]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_4" True="{x:Reference __ReferenceID0}">
                                                    <FlowDecision.False>
                                                      <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_24">
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:Object[]">[assetValue]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:Object[]">[{in_AssetValue}]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </FlowStep>
                                                    </FlowDecision.False>
                                                  </FlowDecision>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowSwitch.Default>
                                            <FlowStep x:Key="boolean" x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                              <ui:InputDialog DisplayName="Input Dialog - ask initial value" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="[&quot;Select initial value aligned with selected type: &quot; + selectedType]" Options="[{&quot;True&quot;,&quot;False&quot;}]" Title="Add Global variable - Initial value">
                                                <ui:InputDialog.Result>
                                                  <OutArgument x:TypeArguments="x:Object">[in_AssetValue]</OutArgument>
                                                </ui:InputDialog.Result>
                                              </ui:InputDialog>
                                              <FlowStep.Next>
                                                <FlowDecision x:Name="__ReferenceID9" Condition="[in_AssetValue Is Nothing OrElse String.IsNullOrWhiteSpace(in_AssetValue.ToString)]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_6" True="{x:Reference __ReferenceID1}" False="{x:Reference __ReferenceID2}" />
                                              </FlowStep.Next>
                                            </FlowStep>
                                            <FlowStep x:Key="integer" x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_19">
                                              <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog - ask initial value" sap2010:WorkflowViewState.IdRef="InputDialog_11" IsPassword="False" Label="[&quot;Enter initial value aligned with selected type: &quot; + selectedType]" Title="Add Global variable - Initial value">
                                                <ui:InputDialog.Result>
                                                  <OutArgument x:TypeArguments="x:Object">[in_AssetValue]</OutArgument>
                                                </ui:InputDialog.Result>
                                              </ui:InputDialog>
                                              <FlowStep.Next>
                                                <FlowDecision x:Name="__ReferenceID8" Condition="[(in_AssetValue is Nothing OrElse in_AssetValue.ToString.Any(Function(x) Not Char.IsNumber(x))) AndAlso in_AssetValue.ToString.FirstOrDefault &lt;&gt; &quot;-&quot;]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_5" True="{x:Reference __ReferenceID3}" False="{x:Reference __ReferenceID2}" />
                                              </FlowStep.Next>
                                            </FlowStep>
                                            <FlowStep x:Key="credential" x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                                              <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog - ask user name" sap2010:WorkflowViewState.IdRef="InputDialog_12" IsPassword="False" Label="Enter user name value" Title="Add Global variable - user name">
                                                <ui:InputDialog.Result>
                                                  <OutArgument x:TypeArguments="x:Object">[in_AssetValue]</OutArgument>
                                                </ui:InputDialog.Result>
                                              </ui:InputDialog>
                                              <FlowStep.Next>
                                                <FlowDecision x:Name="__ReferenceID11" Condition="[in_AssetValue Is Nothing OrElse String.IsNullOrWhiteSpace(in_AssetValue.ToString)]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_8" True="{x:Reference __ReferenceID4}">
                                                  <FlowDecision.False>
                                                    <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_22">
                                                      <ui:InputDialog Options="{x:Null}" DisplayName="Private: Input Dialog - ask password" sap2010:WorkflowViewState.IdRef="InputDialog_13" IsPassword="True" Label="Enter user password value" Title="Add Global variable - user password">
                                                        <ui:InputDialog.Result>
                                                          <OutArgument x:TypeArguments="x:String">[passwordVal]</OutArgument>
                                                        </ui:InputDialog.Result>
                                                      </ui:InputDialog>
                                                      <FlowStep.Next>
                                                        <FlowDecision x:Name="__ReferenceID10" Condition="[passwordVal Is Nothing OrElse String.IsNullOrWhiteSpace(passwordVal.ToString)]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_7" True="{x:Reference __ReferenceID5}">
                                                          <FlowDecision.False>
                                                            <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_25">
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="s:Object[]">[assetValue]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="s:Object[]">[{in_AssetValue.ToString,passwordVal}]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </FlowStep>
                                                          </FlowDecision.False>
                                                        </FlowDecision>
                                                      </FlowStep.Next>
                                                    </FlowStep>
                                                  </FlowDecision.False>
                                                </FlowDecision>
                                              </FlowStep.Next>
                                            </FlowStep>
                                          </FlowSwitch>
                                        </Flowchart.StartNode>
                                        <x:Reference>__ReferenceID6</x:Reference>
                                        <x:Reference>__ReferenceID1</x:Reference>
                                        <x:Reference>__ReferenceID0</x:Reference>
                                        <x:Reference>__ReferenceID3</x:Reference>
                                        <x:Reference>__ReferenceID7</x:Reference>
                                        <x:Reference>__ReferenceID8</x:Reference>
                                        <x:Reference>__ReferenceID9</x:Reference>
                                        <x:Reference>__ReferenceID4</x:Reference>
                                        <x:Reference>__ReferenceID5</x:Reference>
                                        <x:Reference>__ReferenceID10</x:Reference>
                                        <x:Reference>__ReferenceID11</x:Reference>
                                        <x:Reference>__ReferenceID2</x:Reference>
                                        <x:Reference>__ReferenceID12</x:Reference>
                                      </Flowchart>
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID22" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                                        <Sequence DisplayName="Set full name" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                          <Assign DisplayName="Assign - SET - in_AssetName" sap2010:WorkflowViewState.IdRef="Assign_11">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[in_AssetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[String.Join("_",{config("AssetsPrefix").ToString,assetName,"GlobalVariable"})]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - SET - in_AssetType" sap2010:WorkflowViewState.IdRef="Assign_12">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[in_AssetType]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[selectedType]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <x:Reference>__ReferenceID13</x:Reference>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.False>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowSwitch>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <x:Reference>__ReferenceID14</x:Reference>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID15</x:Reference>
      <x:Reference>__ReferenceID16</x:Reference>
      <x:Reference>__ReferenceID17</x:Reference>
      <x:Reference>__ReferenceID18</x:Reference>
      <x:Reference>__ReferenceID19</x:Reference>
      <x:Reference>__ReferenceID20</x:Reference>
      <x:Reference>__ReferenceID21</x:Reference>
      <x:Reference>__ReferenceID22</x:Reference>
      <x:Reference>__ReferenceID23</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
    </Flowchart>
    <sads:DebugSymbol.Symbol>d2FDOlxVc2Vyc1x0b21la1xEb2N1bWVudHNcVWlQYXRoXE5VRlxGcmFtZXdvcmtcQ29tcG9uZW50c1xHbG9iYWwgdmFyaWFibGVzXEdsb2JhbFZhcmlhYmxlLkFkZC54YW1s1QFRA/QEDgIBAVU0VVECAQNWNFZlAgECWQVdHQMBtgJeBfIEEQIBBFttW3UDAbgCWb4BWd8BAwG3AmQ3ZD4CAQVoC28UAwGyAnE+cW8DAbACxQMluwQwAwHjAb4EKc8ENAMB1wGMARfmASIDAZ0B6AF46AGCAQMBmwHrAR/rAbQBAwGZAbADHcADKAMBjQHCA1DCA3MDAYsB7wEdrQMoAgEVdBOJAR4CAQZtOG1YAwG1Amo5akcDAbMCxgMnzAMxAwGnAs0DJ9MDMQMBnALUAye6BDMDAeQBvwQrxgQ0AwHdAccEK84ENAMB2AGNARnlAR4DAZ4B6wGNAesBsQEDAZoBsQMfvwMkAwGOAfQBH50CJAIBdp4CH6wDJAIBFnUViAEgAgEHxgOXAcYD2wEDAa0CxwMpywM6AwGoAs0DmQHNA+MBAwGkAs4DKdIDOgMBnQLZA48B2QOnAQMBmgLcAzHgA0IDAZQC4gNj4gO4AQMBkQLlAznsA0IDAYwCiAQvjARAAwGHAo4EYo4EtwEDAYQCkQQ3lQRIAwH/AZcEapcEuwEDAfwBmgQ/oQRIAwH2Af4DL4IEQAMB8AGEBGGEBIgCAwHvAfQDL/gDQAMB6AH6A2H6A7YBAwHlAcQEVsQEpQEDAeABwQRXwQRlAwHeAcwEVswEZAMB2wHJBFfJBGUDAdkBjQEnjQFXAwGfAY8BHZYBNQMBzQGZAR3jASgDAaEBsQMtsQM/AwGPAbMDI7MDgwIDAZUBtgMjvQMsAwGRAfQBLfQBXQIBd/YBI4cCLgMBggGKAiObAi4CAXmeAi2eApMBAgEXoAIjqgMuAgEadhd6HAIBEHsXfxwCAQyAAReHASACAQjHA7sBxwOdAwMBrALJA1XJA2ADAaoCxwOkA8cDwAMDAakCzgOoAc4DwgEDAaMCzgPLAc4D2wEDAaEC0ANV0ANjAwGfAs4D4gHOA/4BAwGeAtwDzQHcA60CAwGYAt4DXd4DbAMBlgLcA7QC3APZAgMBlQLqA2bqA3cDAY8C5wNn5wNzAwGNAogExwGIBN4BAwGLAooEW4oEagMBiQKIBOUBiASGAgMBiAKRBNYBkQTxAQMBgwKTBGOTBHADAYECkQT4AZEEnQIDAYACnwRsnwSSAQMB+QGcBG2cBHkDAfcB/gPLAf4DmgIDAfQBgARbgARqAwHyAf4DoQL+A8YCAwHxAfQDtwH0A4cCAwHtAfQDkAL0A7gCAwHsAfYDW/YDagMB6gH0A78C9APkAgMB6QGUAWCUAWwDAdUBkgFdkgFrAwHTAZEBW5EBYwMB0QGTAV2TAWsDAc8BjwHQAY8BiAIDAc4BmwEhzQEmAwGqAdUBJd8BMAMBogGzA7sBswPxAQMBmAGzA2KzA2wDAZYBuwNOuwNQAwGUAbgDT7gDVwMBkgH3ASX+AS4DAYcB/wElhgIuAwGDAYsCJZICLgIBfpMCJZoCLgIBeqECJaEC2AECAXSiAiWpAyoCARt2JXZUAgEReBt4+wECARN7JXtQAgENfRt9jQICAQ6FAUOFAUcCAQuCAUSCAVACAQmbAS+bAWADAasBnQEluwEwAwG2Ab4BJcsBMAMBrQHWASfWAa4BAwGnAdcBJ94BMAMBowH8AVD8AfMBAwGKAfkBUfkBYgMBiAGEAlCEAvMBAwGGAYECUYECYgMBhAGQAlCQAusBAwGBAY0CUY0CYgIBf5gCUJgC6wECAX2VAlGVAmICAXuhAqwBoQLVAQIBdaICM6ICYwIBHKQCKeQCNAIBSecCKacDNAIBHnhMeM4BAgEUfUx94AECAQ+hASehAa8CAwHIAaIBJ7oBLAMBtwHCASfCAb4CAwGyAcMBJ8oBMAMBrgHWAZUB1gGrAQMBqAHcAVHcAVQDAaYB2QFS2QFaAwGkAagCK8UCNgIBX8YCK+MCNgIBSusCK4gDNgIBNIkDK6YDNgIBH6EBnAKhAawCAwHLAaEBgAKhAZQCAwHJAaIBNaIBSQMBuAGkASurATQDAcQBrgEruAE2AwG6AcIBoQLCAbsCAwG0AcIBd8IB6QEDAbMByAFRyAFUAwGxAcUBUsUBWgMBrwGpAi2wAjYCAXCxAi24AjYCAWq5Ai3AAjYCAWTBAi3EAjwCAWDHAi3OAjYCAVvPAi3WAjYCAVXXAi3eAjYCAU/fAi3iAjwCAUvsAi3zAjYCAUX0Ai37AjYCAT/8Ai2DAzYCATmEAy2HAzwCATWKAy2RAzYCATCSAy2ZAzYCASqaAy2hAzYCASSiAy2lAzwCASCpAVWpAVgDAccBpgFWpgFeAwHFAa8BLa8BwQIDAb8BsAEttwE2AwG7Aa4CWK4CewIBc6sCWasCZgIBcbYCWLYCiQECAW2zAlmzAmYCAWu+Ali+ApQBAgFnuwJZuwJmAgFlwgJWwgKTAQIBY8MCVsMCYwIBYcwCWMwCewIBXskCWckCZgIBXNQCWNQCiQECAVjRAlnRAmYCAVbcAljcAokBAgFS2QJZ2QJmAgFQ4AJW4AKTAQIBTuECVuECYwIBTPECWPECewIBSO4CWe4CZgIBRvkCWPkCiQECAUL2Aln2AmYCAUCBA1iBA4kBAgE8/gJZ/gJmAgE6hQNWhQOTAQIBOIYDVoYDYwIBNo8DWI8DewIBM4wDWYwDZgIBMZcDWJcDiQECAS2UA1mUA2YCASufA1ifA4kBAgEnnANZnANmAgElowNWowOTAQIBI6QDVqQDYwIBIa8B/AGvAYwCAwHCAa8BlgKvAb4CAwHBAa8BsAGvAdcBAwHAAbUBV7UBWgMBvgGyAViyAWADAbwB</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="737.6,88" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="242,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="264,368">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314.4,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetSecureCredential_1" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="AddCredential_1" sap:VirtualizedContainerService.HintSize="243.2,22.4" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="265.6,247.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="336.8,312.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="561.6,462.4" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336.8,316">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="564.8,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="579.2,693.6" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="918.4,843.2" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="940.8,968">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,704</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="265.6,284.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="265.6,284.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="748,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_2" sap:VirtualizedContainerService.HintSize="600.8,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="243.2,132.8" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="265.6,557.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="243.2,132.8" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="265.6,557.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="288,1280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="InvokeMethod_3" sap:VirtualizedContainerService.HintSize="243.2,132.8" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="265.6,557.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="243.2,132.8" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="265.6,557.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="288,1280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="600.8,1429.6" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="623.2,1616.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="748,1766.4" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">140,614</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_2" sap:VirtualizedContainerService.HintSize="314.4,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="582.4,209.6" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_7" sap:VirtualizedContainerService.HintSize="314.4,92.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_2" sap:VirtualizedContainerService.HintSize="1196.8,255.2" />
      <sap2010:ViewStateData Id="InputDialog_5" sap:VirtualizedContainerService.HintSize="314.4,92.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="1196.8,255.2" />
      <sap2010:ViewStateData Id="InputDialog_10" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">348.895,570</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="79.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">310.641666666667,436.5</av:Point>
            <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
            <av:PointCollection x:Key="TrueConnector">310.641666666667,479.833333333333 220,479.833333333333 220,360.5 250,360.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">389.308333333334,479.833333333333 469.895,479.833333333333 469.895,570</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">250,334.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">350,386.5 350,416.5 349.975,416.5 349.975,436.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_4" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_6" sap:VirtualizedContainerService.HintSize="79.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">90.5,365</av:Point>
            <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
            <av:PointCollection x:Key="TrueConnector">90.5,408.5 0,408.5 0,289.5 30,289.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">169.166666666667,408.333333333333 199.166666666667,408.333333333333 199.166666666667,600.666666666667 348.895,600.666666666667</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,264</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">130,316.8 130,346.8 130.1,346.8 130.1,365</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_11" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_5" sap:VirtualizedContainerService.HintSize="79.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">490.641666666667,356</av:Point>
            <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
            <av:PointCollection x:Key="TrueConnector">490.641666666667,399.333333333333 460.641666666667,399.333333333333 460.641666666667,326 400.641666666667,326 400.641666666667,280 430,280</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">569.841666666667,399.6 599.841666666667,399.6 599.841666666667,600 592.095,600</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">430,254</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">530,306 530,336 529.975,336 529.975,356</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_12" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_13" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">939.333333333333,558.666666666667</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_7" sap:VirtualizedContainerService.HintSize="79.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">810.666666666667,546</av:Point>
            <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
            <av:PointCollection x:Key="TrueConnector">810.666666666667,589.333333333333 720,589.333333333333 720,470 750,470</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">889.333333333333,589.333333333333 939.333333333333,589.333333333333</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">750,444</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">850,496 850,546</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_8" sap:VirtualizedContainerService.HintSize="79.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">750.666666666667,306</av:Point>
            <av:Size x:Key="ShapeSize">79.2,87.2</av:Size>
            <av:PointCollection x:Key="TrueConnector">750.666666666667,349.333333333333 660,349.333333333333 660,240 690,240</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">829.333333333333,349.333333333333 850,349.333333333333 850,444</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">690,214</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">790,266 790,306</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowSwitch`1_2" sap:VirtualizedContainerService.HintSize="70.4,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">265,127.5</av:Point>
            <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
            <av:PointCollection x:Key="booleanConnector">265,192.75 130,192.75 130,264</av:PointCollection>
            <av:PointCollection x:Key="Default">300,214.166666666667 300,244.166666666667 350,244.166666666667 350,334.5</av:PointCollection>
            <x:String x:Key="DefaultCaseDisplayName">string</x:String>
            <av:PointCollection x:Key="integerConnector">335,192.5 530,192.5 530,254</av:PointCollection>
            <av:PointCollection x:Key="credentialConnector">335,149.166666666667 790,149.166666666667 790,214</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="1196.8,670.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
            <x:Double x:Key="Width">1182.5333333333331</x:Double>
            <x:Double x:Key="Height">633.2</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">320,314</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">420,366.666666666667 420,395</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">315,215</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">415,267 415,297 420,297 420,314</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="70.4,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">545,686.5</av:Point>
            <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
            <av:PointCollection x:Key="FalseConnector">615,730 705,730 705,241 515,241</av:PointCollection>
            <x:String x:Key="TrueLabel">No</x:String>
            <x:String x:Key="FalseLabel">Yes</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">480,594</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">580,646 580,686.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowSwitch`1_1" sap:VirtualizedContainerService.HintSize="70.4,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">385,496.5</av:Point>
            <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
            <av:PointCollection x:Key="200Connector">385,561.75 240,561.75 240,614</av:PointCollection>
            <av:PointCollection x:Key="300Connector">455,561.75 580,561.75 580,594</av:PointCollection>
            <av:PointCollection x:Key="Default">420,583.5 420,729.5 400,729.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">320,395</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">420,447.666666666667 420,496.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">70,394</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">270,420.333333333333 300,420.333333333333 300,421.333333333333 320,421.333333333333</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="70.4,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">185,197.5</av:Point>
            <av:Size x:Key="ShapeSize">70.4,87.2</av:Size>
            <av:PointCollection x:Key="FalseConnector">255,241 315,241</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">185,241 40,241 40,420 70,420</av:PointCollection>
            <x:String x:Key="TrueLabel">Exists</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">99,100</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220.6,160 220.6,190 220.2,190 220.2,197.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="737.6,812.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">190,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,77.5 220,100</av:PointCollection>
            <x:Double x:Key="Width">723.33333333333337</x:Double>
            <x:Double x:Key="Height">776</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="760,1093.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Add_1" sap:VirtualizedContainerService.HintSize="800,1213.6" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>