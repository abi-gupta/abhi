<Activity mc:Ignorable="sap sap2010 sads" x:Class="SystemExceptionHandler"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:um="clr-namespace:UiPath.Models;assembly=UiPath.Service.Api"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Exception object with exception details" Name="in_Exception" Type="InArgument(s:Exception)" />
    <x:Property sap2010:Annotation.AnnotationText="Queue transaction item in which exception occured" Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Determines if process will be aborted(True) or continued(False)" Name="out_Abort" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SystemExceptionHandler_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Models</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Service.Api</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Business logic for handling SystemExceptions" DisplayName="SystemExceptionHandler" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="screenshotFileName" />
      <Variable x:TypeArguments="x:String" Default="systemException.json" Name="errorFileName" />
      <Variable x:TypeArguments="s:Exception" Name="previousException" />
      <Variable x:TypeArguments="x:Int32" Name="exceptionCounter" />
      <Variable x:TypeArguments="x:Int32" Name="errorLimit" />
      <Variable x:TypeArguments="um:FaultedDetails" Name="faultedDetails" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="SystemExceptionHandler started" />
    <ui:CommentOut sap2010:Annotation.AnnotationText="TODO" DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence DisplayName="Log" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <ui:AddLogFields DisplayName="Add Transaction log fields" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
              <ui:AddLogFields.Fields>
                <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">Exception</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionReferenceId">[in_TransactionItem.Reference]</InArgument>
              </ui:AddLogFields.Fields>
            </ui:AddLogFields>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Exception for transaction reference Id: &quot;+in_TransactionItem.Reference]" />
            <ui:RemoveLogFields DisplayName="Remove Transaction log fields" sap2010:WorkflowViewState.IdRef="RemoveLogFields_1">
              <ui:RemoveLogFields.Fields>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                  <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                  <InArgument x:TypeArguments="x:String">logF_TransactionReferenceId</InArgument>
                </scg:List>
              </ui:RemoveLogFields.Fields>
            </ui:RemoveLogFields>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Sequence DisplayName="Prehandling" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="tempFiles" />
      </Sequence.Variables>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="Prehandling phase started" />
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TempFiles.Add workflow - add &lt;errorFileName&gt;" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Components\Global variables\TempFiles\TempFiles.Add.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_Value">[errorFileName]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If sap2010:Annotation.AnnotationText="If previous exception exists, read it" Condition="[File.Exists(errorFileName)]" DisplayName="If - previous exception exists" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <Assign DisplayName="Assign - read previous exception" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="s:Exception">[previousException]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:Exception">[JsonConvert.DeserializeObject(Of System.Exception)(File.ReadAllText(errorFileName))]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="s:Exception">[previousException]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Save exception to a &quot;json&quot; file" Condition="[previousException IsNot Nothing AndAlso previousException.Message = in_Exception.Message]" DisplayName="If - Check for previous exception" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <Sequence DisplayName="Increment exception counter" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="Consecutive exception, incrementing counter" />
            <Assign DisplayName="Assign &lt;exceptionCounter&gt;++" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[exceptionCounter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[CInt(previousException.Data("ExceptionCounter")) + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[previousException.Data("ExceptionCounter")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[exceptionCounter]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:WriteTextFile DisplayName="Write Text File - &lt;errorFileName&gt; - previous" FileName="[errorFileName]" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[JsonConvert.SerializeObject(previousException,Newtonsoft.Json.Formatting.Indented)]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Save new exception" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="New exception, setting counter" />
            <Assign DisplayName="Assign &lt;exceptionCounter&gt;" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[exceptionCounter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">1</InArgument>
              </Assign.Value>
            </Assign>
            <InvokeMethod sap2010:Annotation.AnnotationText="Key: &quot;ExceptionCounter&quot;&#xA;Value: &lt;exceptionCounter&gt;" DisplayName="Invoke Method - reset exception counter" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sc:IDictionary">[in_Exception.Data]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Object">["ExceptionCounter"]</InArgument>
              <InArgument x:TypeArguments="x:Object">[exceptionCounter]</InArgument>
            </InvokeMethod>
            <ui:WriteTextFile DisplayName="Write Text File - &lt;errorFileName&gt; - new" FileName="[errorFileName]" sap2010:WorkflowViewState.IdRef="WriteTextFile_4" Text="[JsonConvert.SerializeObject(in_Exception,Newtonsoft.Json.Formatting.Indented)]" />
          </Sequence>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Get screenshot file name" Condition="[in_Exception.Data IsNot Nothing AndAlso in_Exception.Data.Contains(&quot;Screenshot&quot;)]" DisplayName="If - in_Exception.Data.Contains(&quot;Screenshot&quot;)" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Then>
          <Assign DisplayName="Assign &lt;screenshotFileName&gt;" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[screenshotFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Exception.Data("Screenshot").ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Assign nothign &lt;screenshotFileName&gt;" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[screenshotFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Get FaultedDetails as UiPath.Model.FaultedDetails object" Condition="[in_Exception.Data.Contains(&quot;FaultedDetails&quot;) AndAlso (in_Exception.Data(&quot;FaultedDetails&quot;).GetType Is GetType(UiPath.Models.FaultedDetails))]" DisplayName="If - FaultedDetails exists" sap2010:WorkflowViewState.IdRef="If_8">
        <If.Then>
          <Assign DisplayName="Assign - DeserializeObject - &lt;faultedDetails&gt;" sap2010:WorkflowViewState.IdRef="Assign_15">
            <Assign.To>
              <OutArgument x:TypeArguments="um:FaultedDetails">[faultedDetails]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="um:FaultedDetails">[CType(in_Exception.Data("FaultedDetails"),UiPath.Models.FaultedDetails)]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Assign - DeserializeObject - &lt;faultedDetails&gt;" sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="um:FaultedDetails">[faultedDetails]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="um:FaultedDetails">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Get error limit passed with exception in Data object or set&#xA;default: 3" Condition="[in_Exception.Data.Contains(&quot;ErrorLimit&quot;)]" DisplayName="If - ErrorLimit key exists" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <Assign DisplayName="Assign &lt;errorLimit&gt;" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[errorLimit]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[CInt(in_Exception.Data("ErrorLimit"))]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Assign default &lt;errorLimit&gt;" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[errorLimit]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">3</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="Prehandling phase ended" />
    </Sequence>
    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Handling start" />
    <Sequence DisplayName="Log exception" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Error" Message="[&quot;Exception occured in State Machine state: &quot; + If(String.IsNullOrWhiteSpace(in_Exception.Data(&quot;StateName&quot;).ToString),&quot;not defined&quot;,in_Exception.Data(&quot;StateName&quot;).ToString)]" />
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Error" Message="[&quot;Exception class name: &quot; + in_Exception.GetType().Name]" />
      <If Condition="[faultedDetails IsNot Nothing]" DisplayName="Log &lt;faultedDetails&gt;" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <Sequence DisplayName="Sequence log &lt;faultedDetails&gt;" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Error" Message="[&quot;Exception activity DisplayName: &quot; + faultedDetails.DisplayName]" />
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Error" Message="[&quot;Exception workflow file name: &quot; + faultedDetails.WorkflowFile]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Trace" Message="No faulted details" />
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Error" Message="[&quot;Exception source: &quot; + If(String.IsNullOrWhiteSpace(in_Exception.Source),&quot;source not defined&quot;,in_Exception.Source)]" />
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[&quot;Exception message: &quot; + in_Exception.Message]" />
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Error" Message="[&quot;Exception consecutive counter: &quot; &amp; exceptionCounter]" />
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[&quot;Exception screenshot location: &quot; + If(String.IsNullOrWhiteSpace(screenshotFileName),&quot;no screenshot&quot;,screenshotFileName)]" />
    </Sequence>
    <If sap2010:Annotation.AnnotationText="Set &lt;in_TransactionItem&gt; status" Condition="[in_TransactionItem IsNot Nothing AndAlso (GetType(QueueItem) Is in_TransactionItem.GetType)]" DisplayName="If - &lt;in_TransactionItem&gt;" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Details: Screenshot location&#xA;Reason: exception message" Details="[If(String.IsNullOrWhiteSpace(screenshotFileName),&quot;No screenshot taken&quot;,screenshotFileName)]" DisplayName="Set Transaction Status" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Reason="[in_Exception.Message]" Status="Failed" TransactionItem="[in_TransactionItem]">
          <ui:SetTransactionStatus.Output>
            <scg:Dictionary x:TypeArguments="x:String, InArgument" />
          </ui:SetTransactionStatus.Output>
        </ui:SetTransactionStatus>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="Orchestrator queue item not detected" />
      </If.Else>
    </If>
    <Flowchart DisplayName="SystemException handling flowchart" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <Flowchart.StartNode>
        <FlowDecision x:Name="__ReferenceID0" Condition="[errorLimit &lt;= exceptionCounter]" DisplayName="&lt;errorLimit&gt; reached" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_1">
              <Sequence sap2010:Annotation.AnnotationText="Abort process" DisplayName="Consecutive exception limit" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="Consecutive exception limit reached!" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[out_Abort]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_4">
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_3" Text="process specific handling" />
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[out_Abort]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart>
    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="Handling end" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="SystemExceptionHandler ended" />
    <sads:DebugSymbol.Symbol>d1pDOlxVc2Vyc1x0b21la1xEb2N1bWVudHNcVWlQYXRoXE5VRlxTb2x1dGlvblxFeGNlcHRpb25IYW5kbGVyc1xTeXN0ZW1FeGNlcHRpb25IYW5kbGVyLnhhbWx2UwPSAg4CAQFWNFZKAgECXAVclgEDAaEBXQVzFQMBoAF0BYQCEAIBQoUCBYUCVQIBQYYCBZgCEAIBIpkCBaQCCgIBFqUCBc4CEQIBBs8CBc8CUwIBBdACBdAClAECAQNcc1yTAQMBogF4B3iTAQMBngF5B30fAwGaAX4HkwEMAwGQAZQBB8ABDAIBacEBB9YBDAIBXNcBB+wBDAIBUe0BB4ICDAIBRYMCB4MCkQECAUOHAgeHAtACAgE9iAIHiAK9AQIBOokCB5MCDAIBMZQCB5QCgwICAS2VAgeVArMBAgEqlgIHlgK/AQIBJ5cCB5cCiQICASOZAl2ZArwBAgEXmwIJnwIjAgEaogIJogKgAQIBGKcCOacCXgIBE7kCD7kCagIBErwCE8MCHAIBDqoCD7QCGgIBB9ACc9ACkQECAQR4dXiQAQMBnwF7Q3tSAwGcAXnYAXmSAgMBmwF+X359AwGRAYABC4cBFAMBlgGKAQuRARQDAZIBlAFjlAG/AQIBapYBC6kBFgIBf6wBC74BFgIBbsEBUsEBsAECAV3DAQvKARQCAWTNAQvUARQCAWDXAXLXAZUCAgFS2QEL4AEUAgFX4wEL6gEUAgFT7QGEAe0BugECAUbvAQv2ARQCAUz5AQuAAhQCAUiDAnWDAo4BAgFEhwJ2hwLNAgIBPogCdogCugECATuJAhWJAjUCATKLAguOAhYCATWRAguRApEBAgEzlAJ2lAKAAgIBLpUCdpUCsAECASuWAnaWArwBAgEolwJ2lwKGAgIBJJsCvQObAtUDAgEgmwLXAZsCvwICAR2bAvYDmwKMBAIBG6ICd6ICnQECARnBAj/BAkQCARG+AkC+AksCAQ+rAhGrAqgBAgEMrAIRswIaAgEIhQE5hQGOAQMBmQGCATqCAU0DAZcBjwE5jwFCAwGVAYwBOowBTQMBkwGXAQ2XAasBAwGOAZgBDZ8BFgMBiQGgAQ2nARYDAYQBqAENqAGLAgMBgAGtAQ2tAZ4BAgF9rgENtQEWAgF5tgENvAEcAgFzvQENvQGBAgIBb8gBNsgBYAIBZ8UBN8UBSwIBZdIBNtIBPwIBY88BN88BSwIBYd4BP94BiAECAVrbAUDbAVACAVjoAT/oAUgCAVblAUDlAVACAVT0ATX0AVwCAU/xATbxAUICAU3+ATX+ATYCAUv7ATb7AUICAUmMAg2MAswBAgE4jQINjQLLAQIBNpECepECjgECATSrAn+rAqUBAgENsQI9sQJBAgELrgI+rgJJAgEJlwF7lwGoAQMBjwGdATedAW0DAYwBmgE4mgFKAwGKAaUBOKUBSgMBhwGiATmiAWUDAYUBqAGyAagBiAIDAYMBqAFpqAF6AwGBAa0Be60BmwECAX6zATezATgCAXywATiwAUoCAXq7ATa7AUgCAXe6ATa6AUoCAXa4AT64AVECAXS9Aa0BvQH+AQIBcr0BZL0BdQIBcIwCfIwCyQECATmNAnyNAsgBAgE3</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="641.6,92.8" />
      <sap2010:ViewStateData Id="AddLogFields_1" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="RemoveLogFields_1" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336.8,342.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="359.2,467.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="641.6,80.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="314.4,96.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314.4,92.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="WriteTextFile_2" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="314.4,176.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_4" sap:VirtualizedContainerService.HintSize="314.4,88" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="314.4,80.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="314.4,80.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="511.2,237.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="314.4,128.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336.8,1178.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="641.6,56" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336.8,350.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="676,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="641.6,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_1" sap:VirtualizedContainerService.HintSize="200,66.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="641.6,270.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="200,80.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,130.9</av:Point>
            <av:Size x:Key="ShapeSize">200,80.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_3" sap:VirtualizedContainerService.HintSize="314.4,56">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243.2,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">358.6,388.235</av:Point>
            <av:Size x:Key="ShapeSize">243.2,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">313,272.235</av:Point>
            <av:Size x:Key="ShapeSize">314.4,56</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470.2,328.235 470.2,358.235 480.2,358.235 480.2,388.235</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="119.2,87.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270.4,127.7</av:Point>
            <av:Size x:Key="ShapeSize">119.2,87.2</av:Size>
            <av:PointCollection x:Key="TrueConnector">270.4,171.3 200,171.3</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">389.6,171.3 470.2,171.3 470.2,272.235</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="641.6,636.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">300,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,77.7 330,127.7</av:PointCollection>
            <x:Double x:Key="Width">627.4</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="641.6,56" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="641.6,92.8" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="664,1864">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SystemExceptionHandler_1" sap:VirtualizedContainerService.HintSize="704,1944" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>