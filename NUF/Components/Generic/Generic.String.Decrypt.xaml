<Activity mc:Ignorable="sap sap2010 sads" x:Class="Generic_String_Decrypt"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:ssc="clr-namespace:System.Security.Cryptography;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Encrypted string" Name="in_EncryptedText" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Password phrase used to encrypt the string" Name="in_PasswordPhrase" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Decrypted string" Name="out_DecryptedText" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Generic_String_Decrypt_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Decrypt a ecrypted string with usage of pass phrase" DisplayName="Generic.String.Decrypt" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:Byte[]" Name="cipherTextBytesWithSaltAndIv" />
      <Variable x:TypeArguments="s:Byte[]" Name="saltStringBytes" />
      <Variable x:TypeArguments="s:Byte[]" Name="ivStringBytes" />
      <Variable x:TypeArguments="s:Byte[]" Name="cipherTextBytes" />
      <Variable x:TypeArguments="x:Int32" Default="256" Name="keySize" />
      <Variable x:TypeArguments="ssc:Rfc2898DeriveBytes" Name="password" />
      <Variable x:TypeArguments="x:Int32" Default="1000" Name="derivationIterations" />
      <Variable x:TypeArguments="s:Byte[]" Name="keyBytes" />
      <Variable x:TypeArguments="si:MemoryStream" Name="memoryStream" />
      <Variable x:TypeArguments="ssc:CryptoStream" Name="cryptoStream" />
      <Variable x:TypeArguments="x:Int32" Name="decryptedByteCount" />
      <Variable x:TypeArguments="s:Byte[]" Name="plainTextBytes" />
      <Variable x:TypeArguments="ssc:ICryptoTransform" Name="decryptor" />
      <Variable x:TypeArguments="ssc:RijndaelManaged" Name="symmetricKey" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="Generic.String.Decrypt" />
    <Assign sap2010:Annotation.AnnotationText="Get the complete stream of bytes that represent: [32 bytes of Salt] + [32 bytes of IV] + [n bytes of CipherText]" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Byte[]">[cipherTextBytesWithSaltAndIv]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Byte[]">[Convert.FromBase64String(in_EncryptedText)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Get the saltbytes by extracting the first 32 bytes from the supplied cipherText bytes." sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Byte[]">[saltStringBytes]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Byte[]">[cipherTextBytesWithSaltAndIv.Take(keySize\8).ToArray]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Get the IV bytes by extracting the next 32 bytes from the supplied cipherText bytes." sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Byte[]">[ivStringBytes]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Byte[]">[cipherTextBytesWithSaltAndIv.Skip(keySize\8).Take(keySize\8).ToArray]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Get the actual cipher text bytes by removing the first 64 bytes from the cipherText string." sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Byte[]">[cipherTextBytes]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Byte[]">[cipherTextBytesWithSaltAndIv.Skip((keySize\8) * 2).Take(cipherTextBytesWithSaltAndIv.Length - ((keySize\8) * 2)).ToArray]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch - Rfc2898DeriveBytes" sap2010:WorkflowViewState.IdRef="TryCatch_5">
      <TryCatch.Finally>
        <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Dispose">
          <InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="ssc:Rfc2898DeriveBytes">[password]</InArgument>
          </InvokeMethod.TargetObject>
        </InvokeMethod>
      </TryCatch.Finally>
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="ssc:Rfc2898DeriveBytes">[password]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="ssc:Rfc2898DeriveBytes">[new Rfc2898DeriveBytes(in_PasswordPhrase,saltStringBytes,derivationIterations)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="s:Byte[]">[keyBytes]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:Byte[]">[password.GetBytes(keySize\8)]</InArgument>
            </Assign.Value>
          </Assign>
          <TryCatch DisplayName="RijndaelManaged" sap2010:WorkflowViewState.IdRef="TryCatch_4">
            <TryCatch.Finally>
              <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Dispose">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="ssc:RijndaelManaged">[symmetricKey]</InArgument>
                </InvokeMethod.TargetObject>
              </InvokeMethod>
            </TryCatch.Finally>
            <TryCatch.Try>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ssc:RijndaelManaged">[symmetricKey]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ssc:RijndaelManaged">[new RijndaelManaged]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[symmetricKey.BlockSize]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">256</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ssc:CipherMode">[symmetricKey.Mode]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ssc:CipherMode">[CipherMode.CBC]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ssc:PaddingMode">[symmetricKey.Padding]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ssc:PaddingMode">[PaddingMode.PKCS7]</InArgument>
                  </Assign.Value>
                </Assign>
                <TryCatch DisplayName="CreateDecryptor" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                  <TryCatch.Finally>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ssc:ICryptoTransform">[decryptor]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ssc:ICryptoTransform">[Nothing]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </TryCatch.Finally>
                  <TryCatch.Try>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ssc:ICryptoTransform">[decryptor]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ssc:ICryptoTransform">[symmetricKey.CreateDecryptor(keyBytes, ivStringBytes)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <TryCatch DisplayName="memoryStream " sap2010:WorkflowViewState.IdRef="TryCatch_2">
                        <TryCatch.Finally>
                          <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Dispose">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="si:MemoryStream">[memoryStream]</InArgument>
                            </InvokeMethod.TargetObject>
                          </InvokeMethod>
                        </TryCatch.Finally>
                        <TryCatch.Try>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="si:MemoryStream">[memoryStream]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="si:MemoryStream">[New MemoryStream(cipherTextBytes)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <TryCatch DisplayName="CryptoStream" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                              <TryCatch.Finally>
                                <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Dispose">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="ssc:CryptoStream">[cryptoStream]</InArgument>
                                  </InvokeMethod.TargetObject>
                                </InvokeMethod>
                              </TryCatch.Finally>
                              <TryCatch.Try>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ssc:CryptoStream">[cryptoStream]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ssc:CryptoStream">[New CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Byte[]">[plainTextBytes]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Byte[]">[new byte(cipherTextBytes.Length){}]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign &lt;decryptedByteCount&gt;" sap2010:WorkflowViewState.IdRef="Assign_20">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[decryptedByteCount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[cryptoStream.Read(plainTextBytes, 0, plainTextBytes.Length)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <InvokeMethod DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Close">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="ssc:CryptoStream">[cryptoStream]</InArgument>
                                    </InvokeMethod.TargetObject>
                                  </InvokeMethod>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_DecryptedText]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Encoding.UTF8.GetString(plainTextBytes, 0, decryptedByteCount)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </TryCatch.Try>
                            </TryCatch>
                          </Sequence>
                        </TryCatch.Try>
                      </TryCatch>
                    </Sequence>
                  </TryCatch.Try>
                </TryCatch>
              </Sequence>
            </TryCatch.Try>
          </TryCatch>
        </Sequence>
      </TryCatch.Try>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d1JDOlxVc2Vyc1x0b21la1xEb2N1bWVudHNcVWlQYXRoXE5VRlxDb21wb25lbnRzXEdlbmVyaWNcR2VuZXJpYy5TdHJpbmcuRGVjcnlwdC54YW1sTE4DqgIOAgEBVDNUOAIBA1YzVjkCAQJfBV+OAQIBamAFZw4CAWZoBW8OAgFicAV3DgIBXngFfw4CAVqAAQWoAhACAQRfc1+LAQIBa2UwZVwCAWliMWJPAgFnbTBtZgIBZWoxakICAWN1MHV2AgFhcjFyQAIBX30wfaoBAgFdejF6QgIBW4kBCaYCFAIBCIIBCYYBGAIBBYoBC5EBFAIBVpIBC5kBFAIBUJoBC6UCFgIBCYQBQoQBTAIBBo8BRI8BlAECAVmMAUWMAU8CAVeXATaXAVQCAVOUATeUAUECAVGjAQ+jAhoCAQ2cAQ+gAR4CAQqkARGrARoCAUysARGzARoCAUi0ARG7ARoCAUS8ARHDARoCAUDEARGiAhwCAQ6eAUWeAVMCAQupAUepAVwCAU+mAUimAVYCAU2xATuxAT4CAUuuATyuAVQCAUm5AUK5AVICAUe2AUO2AVYCAUXBAUPBAVYCAUO+AUS+AVoCAUHQARWgAiACARPGARXNAR4CAQ/RARfYASACATnZARefAiICARTLAUzLAVUCARLIAU3IAVgCARDWAU7WAYUBAgE80wFP0wFaAgE64gEbnQImAgEY2wEb3wEqAgEV4wEd6gEmAgE16wEdnAIoAgEZ3QFN3QFbAgEW6AFP6AFyAgE45QFQ5QFeAgE29AEhmgIsAgEd7QEh8QEwAgEa9QEj/AEsAgEx/QEjhAIsAgEshQIjjAIsAgEljQIjkQIyAgEikgIjmQIsAgEe7wFU7wFiAgEb+gFW+gGYAQIBNPcBV/cBZQIBMoICToICcgIBL/8BT/8BXwIBLYoCTYoCigECASiHAk6HAmICASaPAlaPAmQCASOXAk6XAo4BAgEhlAJPlAJiAgEf</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314.4,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314.4,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314.4,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314.4,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="217.6,132.8" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="537.6,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="537.6,60" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="217.6,132.8" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="497.6,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="497.6,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="497.6,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="497.6,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="457.6,60" />
      <sap2010:ViewStateData Id="InvokeMethod_3" sap:VirtualizedContainerService.HintSize="217.6,132.8" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="417.6,60" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="217.6,132.8" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="InvokeMethod_8" sap:VirtualizedContainerService.HintSize="243.2,132.8" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="265.6,657.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="417.6,865.6" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="440,1090.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="457.6,1298.4" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="480,1523.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="497.6,1731.2" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="520,2256">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="537.6,2464" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="560,2788.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="314.4,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336.8,978.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Generic_String_Decrypt_1" sap:VirtualizedContainerService.HintSize="376.8,1058.4" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>